C51 COMPILER V9.60.7.0   SPI                                                               09/09/2024 23:48:38 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN .\Objects\SPI.obj
COMPILER INVOKED BY: C:\hoc\8051\Keil_C_v5\C51\BIN\C51.EXE ..\..\Library\SPI\SPI.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECT
                    -EXTEND PRINT(.\Listings\SPI.lst) TABS(2) OBJECT(.\Objects\SPI.obj)

line level    source

   1          //khai bao ket noi chan SPI
   2          //sbit SPI_SCLK = P2^0;
   3          //sbit SPI_MOSI = P2^1;
   4          //sbit SPI_MISO = P2^2;
   5          //sbit SPI_CS = P2^3;
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          #include "C:\hoc\8051\bai_tap\Library\SPI\SPI.h"
  10          
  11          // SPI mode 0: CPOL =0; CPHA = 0
  12          void Soft_SPI_Init()
  13          {
  14   1        SPI_CS = 1;
  15   1        SPI_SCLK = 0;
  16   1        SPI_MISO = 1;
  17   1      }
  18          
  19          // ghi 1 byte du lieu
  20          void Soft_SPI_Write(unsigned char b)
  21          {
  22   1        unsigned char i;
  23   1        for(i=0; i<8;i++)
  24   1        {
  25   2          if( (b&0x80)==0x80 )
  26   2          {
  27   3            SPI_MOSI = 1;
  28   3          }else{ 
  29   3            SPI_MOSI = 0;
  30   3          }
  31   2          SPI_SCLK = 1;
  32   2          SPI_SCLK = 0;
  33   2          b<<=1;
  34   2        }
  35   1      }
  36          
  37          // doc 1 byte du lieu
  38          unsigned char Soft_SPI_Read()
  39          {
  40   1        unsigned char i,b;
  41   1        for(i=0; i<8; i++)
  42   1        {
  43   2          b<<=1;
  44   2          SPI_SCLK = 1;
  45   2          if(SPI_MISO)
  46   2          {
  47   3            b |= 0x01;
  48   3          }
  49   2          SPI_SCLK = 0;
  50   2        }
  51   1        return b;
  52   1      }


C51 COMPILER V9.60.7.0   SPI                                                               09/09/2024 23:48:38 PAGE 2   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     53    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
